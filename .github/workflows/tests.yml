name: Tests

on:

  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:

  changes:
    name: Change detection
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          src:
            - '**/*.kt'
            - '**/*.properties'
            - '**/*gradle*'
            - '**/resources/**'

  lint:
    name: Linter
    needs: changes
    if: ${{ github.ref != 'refs/heads/master' && needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - uses: musichin/ktlint-check@v2
      with:
        ktlint-version: '0.48.2'
        relative: true
        patterns: |
          **/**.kt{,s}
          !**/generated/**

  test:
    name: Tests
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Merge with target branch
      if: ${{ contains(github.event_name, 'pull_request') }}
      uses: check-spelling/checkout-merge@main

    - name: Set up Eclipse Java 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Run tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: allTestAggregateTestReport

    - name: Coverage report
      uses: gradle/gradle-build-action@v2
      with:
        arguments: allTestCodeCoverageReport

    - name: Add coverage to PR
      uses: madrapps/jacoco-report@v1.3
      with:
        paths: ${{ github.workspace }}/build/reports/jacoco/allTestCodeCoverageReport/allTestCodeCoverageReport.xml
        token: ${{ secrets.JACOCO_GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80

    - name: Add reports to Pages site
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        git config pull.rebase false
        git config user.email git@github.com
        git config user.name 'GitHub Actions'
        REV=$(git rev-parse --short HEAD)

        # sync
        git fetch
        git checkout -b gh-pages --track origin/gh-pages
        git pull

        # reuse static assets (css, js, images)
        [ -d docs/static ] && rm -rf docs/static
        mkdir -p docs/static
        mv build/reports/tests/all/aggregated-results/{css,js} docs/static
        mv build/reports/jacoco/allTestCodeCoverageReport/html/jacoco-resources docs/static

        # copy reports to rev folder
        mv build/reports/tests/all/aggregated-results docs/$REV
        mv build/reports/jacoco/allTestCodeCoverageReport/html docs/$REV/coverage

        # link static assets to rev folder
        rgrep -l -e '["/]\(css\|js\)/' docs/$REV | grep '.html' \
          | xargs sed -i -e 's/\(css\|js\)\//..\/static\/&/g'
        rgrep -l -e '["/]jacoco-resources/' docs/$REV/coverage | grep '.html' \
          | xargs sed -i -e 's/jacoco-resources\//..\/..\/static\/&/g'

        # add link to coverage report in test report index
        sed -i -e 's/<a href="#tab1">Classes<\/a>/&<\/li><li><a href="coverage\/">Coverage report<\/a>/' docs/$REV/index.html

        # commit and push
        git add -f docs
        git commit -m "$(echo -e "üìù test report for $REV\nhttps://haliphax.github.io/ktor-starter-project/$REV")"
        git push -u origin gh-pages
